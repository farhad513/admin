import React, { useState, useEffect, useMemo } from "react";
import { FaEye } from "react-icons/fa";
import { Link } from "react-router-dom";
import Pagination from "../Pagination";
import Search from "../components/Search";
import { useSelector, useDispatch } from "react-redux";
import { get_hospital_appoinments } from "../../store/Reducers/AppoinmentReducer";
import SeoHelmet from "../components/SEO";

// ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞
const convertToBanglaNumber = (number) => {
  const engToBn = {
    0: "‡ß¶",
    1: "‡ßß",
    2: "‡ß®",
    3: "‡ß©",
    4: "‡ß™",
    5: "‡ß´",
    6: "‡ß¨",
    7: "‡ß≠",
    8: "‡ßÆ",
    9: "‡ßØ",
  };
  return number
    .toString()
    .split("")
    .map((digit) => engToBn[digit] || digit)
    .join("");
};

// ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ì ‡¶∏‡¶Æ‡ßü ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü: "‡ßß‡ßÆ ‡¶Æ‡ßá ‡ß®‡ß¶‡ß®‡ß´, ‡ß™:‡ß©‡ß¨ ‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞"
// ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü: "‡ßß‡ßÆ ‡¶Æ‡ßá ‡ß®‡ß¶‡ß®‡ß´"
const formatBanglaDate = (dateString) => {
  const date = new Date(dateString);

  const day = convertToBanglaNumber(date.getDate());
  const year = convertToBanglaNumber(date.getFullYear());

  const banglaMonths = [
    "‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø",
    "‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø",
    "‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö",
    "‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤",
    "‡¶Æ‡ßá",
    "‡¶ú‡ßÅ‡¶®",
    "‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á",
    "‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü",
    "‡¶∏‡ßá‡¶™‡ßç‡¶ü‡ßá‡¶Æ‡ßç‡¶¨‡¶∞",
    "‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞",
    "‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞",
    "‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞",
  ];
  const month = banglaMonths[date.getMonth()];

  return `${day} ${month} ${year}`;
};

// Status ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ
const convertStatusToBangla = (status) => {
  const statusMap = {
    pending: "‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶Æ‡¶æ‡¶£",
    confirmed: "‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§",
    cancelled: "‡¶¨‡¶æ‡¶§‡¶ø‡¶≤",
  };
  return statusMap[status] || status;
};

const Appoinments = () => {
  const dispatch = useDispatch();
  const { totalAppoinments, myAppoinments, loading } = useSelector(
    (state) => state.appoinment
  );
  const { userInfo } = useSelector((state) => state.auth);

  const [currentPage, setCurrentPage] = useState(1);
  const [searchValue, setSearchValue] = useState("");
  const [parPage, setParPage] = useState(5);
  console.log(myAppoinments);
  useEffect(() => {
    if (userInfo?._id) {
      dispatch(
        get_hospital_appoinments({
          parPage: parseInt(parPage),
          page: parseInt(currentPage),
          searchValue,
          hospitalId: userInfo._id,
        })
      );
    }
  }, [dispatch, parPage, currentPage, searchValue, userInfo]);

  const renderedAppoinments = useMemo(() => {
    return myAppoinments.map((item) => (
      <tr key={item._id} className="text-center">
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          #{item._id.toUpperCase()}
        </td>

        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.appoinment.patientName
            ? item.appoinment.patientName.split(" ").slice(0, 2).join(" ")
            : "‡¶®‡¶æ‡¶Æ ‡¶®‡ßá‡¶á"}
        </td>

        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.doctor?.name.split(" ").slice(0, 2).join(" ") || "‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶®‡ßá‡¶á"}
        </td>

        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.doctor?.category.split(" ").slice(0, 3).join(" ") ||
            "‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶ø‡¶§ ‡¶®‡ßü"}
        </td>

        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.appoinment.appointmentDate
            ? formatBanglaDate(item.appoinment.appointmentDate)
            : ""}
        </td>

        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {convertStatusToBangla(item.status)}
        </td>

        <td className="py-3 px-4 font-medium whitespace-nowrap ps-8">
          <Link
            to={`/hospital/dashboard/appoinment/details/${item._id}`}
            className="p-[6px] w-[30px] text-white bg-green-500 rounded hover:shadow-lg hover:shadow-green-500/50 flex justify-center items-center"
          >
            <FaEye />
          </Link>
        </td>
      </tr>
    ));
  }, [myAppoinments]);

  return (
    <div className="px-2 lg:px-7 pt-5">
      <SeoHelmet
        title="‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü | Medi Fast Health Care"
        description="Medi Fast Health Care ‡¶•‡ßá‡¶ï‡ßá ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶∏‡¶π‡¶ú‡ßá‡¶á ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶¨‡ßÅ‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶ú‡¶®‡¶ï ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ì ‡¶∏‡¶Æ‡ßü ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡ßü‡ßÄ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§"
        keywords="‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü, ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü, ‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶® ‡¶¨‡ßÅ‡¶ï‡¶ø‡¶Ç, Medi Fast Health Care, ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶∏‡ßá‡¶¨‡¶æ, ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßü‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü"
        url="https://medifasthealthcare.com/dashboard/appointments"
      />

      <div className="w-full p-4 bg-[#fff] rounded-md">
        <Search
          setParPage={setParPage}
          setSearchValue={setSearchValue}
          searchValue={searchValue}
        />
        <div className="relative overflow-x-auto pt-5">
          <table className="w-full text-sm text-left text-[#000] ">
            <thead className="text-sm text-[#000] uppercase border-b border-slate-700 text-center ">
              <tr>
                <th className="py-3 px-4">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Ü‡¶á‡¶°‡¶ø</th>
                <th className="py-3 px-4">‡¶∞‡ßã‡¶ó‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ</th>
                <th className="py-3 px-4">‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ</th>
                <th className="py-3 px-4">‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø</th>
                <th className="py-3 px-4">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ì ‡¶∏‡¶Æ‡¶Ø‡¶º</th>
                <th className="py-3 px-4">‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ</th>
                <th className="py-3 px-4">‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡¶∂‡¶®</th>
              </tr>
            </thead>
            <tbody>
              {loading ? (
                <tr>
                  <td colSpan="8" className="p-0">
                    <div className="w-full text-center py-8 text-blue-400 font-semibold flex flex-col items-center justify-center gap-2 min-h-[150px]">
                      <span className="text-3xl animate-spin">üîÑ</span>
                      <span>‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...</span>
                    </div>
                  </td>
                </tr>
              ) : myAppoinments.length > 0 ? (
                renderedAppoinments
              ) : (
                <tr>
                  <td colSpan="8" className="p-0">
                    <div className="w-full text-center py-8 text-red-500 font-semibold flex flex-col items-center justify-center gap-2 min-h-[150px]">
                      <span className="text-3xl">üòï</span>
                      <span>‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§</span>
                    </div>
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>

        {totalAppoinments > parPage && (
          <div className="w-full flex justify-end mt-4">
            <Pagination
              pageNumber={currentPage}
              setPageNumber={setCurrentPage}
              totalItem={totalAppoinments}
              parPage={parPage}
              showItem={3}
            />
          </div>
        )}
      </div>
    </div>
  );
};

export default Appoinments;
