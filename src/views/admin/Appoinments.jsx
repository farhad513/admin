import React, { useState, useEffect, useMemo } from "react";
import { FaEye } from "react-icons/fa";
import { Link } from "react-router-dom";
import Pagination from "../Pagination";
import Search from "../components/Search";
import { useSelector, useDispatch } from "react-redux";
import { get_admin_appoinments } from "../../store/Reducers/AppoinmentReducer";
import SeoHelmet from "../components/SEO";

// ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞
const convertToBanglaNumber = (number) => {
  const engToBn = {
    0: "‡ß¶",
    1: "‡ßß",
    2: "‡ß®",
    3: "‡ß©",
    4: "‡ß™",
    5: "‡ß´",
    6: "‡ß¨",
    7: "‡ß≠",
    8: "‡ßÆ",
    9: "‡ßØ",
  };
  return number
    .toString()
    .split("")
    .map((digit) => engToBn[digit] || digit)
    .join("");
};

// ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ì ‡¶∏‡¶Æ‡ßü ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü
const formatBanglaDate = (dateString) => {
  const date = new Date(dateString);

  const day = convertToBanglaNumber(date.getDate());
  const year = convertToBanglaNumber(date.getFullYear());

  const banglaMonths = [
    "‡¶ú‡¶æ‡¶®‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø",
    "‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡¶Ø‡¶º‡¶æ‡¶∞‡¶ø",
    "‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö",
    "‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤",
    "‡¶Æ‡ßá",
    "‡¶ú‡ßÅ‡¶®",
    "‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á",
    "‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü",
    "‡¶∏‡ßá‡¶™‡ßç‡¶ü‡ßá‡¶Æ‡ßç‡¶¨‡¶∞",
    "‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞",
    "‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞",
    "‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞",
  ];
  const month = banglaMonths[date.getMonth()];

  return `${day} ${month} ${year}`;
};

// Status ‚Üí ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ
const convertStatusToBangla = (status) => {
  const statusMap = {
    pending: "‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶Æ‡¶æ‡¶£",
    confirmed: "‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§",
    cancelled: "‡¶¨‡¶æ‡¶§‡¶ø‡¶≤",
  };
  return statusMap[status] || status;
};

const Appoinments = () => {
  const dispatch = useDispatch();
  const { totalAppoinments, myAppoinments } = useSelector(
    (state) => state.appoinment
  );
  const { userInfo } = useSelector((state) => state.auth);
  const [currentPage, setCurrentPage] = useState(1);
  const [searchValue, setSearchValue] = useState("");
  const [parPage, setParPage] = useState(5);
  console.log(myAppoinments);
  useEffect(() => {
    if (userInfo?._id) {
      dispatch(
        get_admin_appoinments({
          parPage: parseInt(parPage),
          page: parseInt(currentPage),
          searchValue,
        })
      );
    }
  }, [dispatch, parPage, currentPage, searchValue, userInfo]);

  const renderedAppoinments = useMemo(() => {
    return myAppoinments.map((item, index) => (
      <tr key={item._id} className="text-center wrapper">
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          #{item._id.toUpperCase()}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item?.userId?.name
            ? item?.userId?.name.split(" ").slice(0, 2).join(" ")
            : "‡¶®‡¶æ‡¶Æ ‡¶®‡ßá‡¶á"}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item?.userId?.phone}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item?.patientName
            ? item.patientName.split(" ").slice(0, 2).join(" ")
            : "‡¶®‡¶æ‡¶Æ ‡¶®‡ßá‡¶á"}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.phone || "‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶®‡ßá‡¶á"}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.doctorId?.name.split(" ").slice(0, 2).join(" ") ||
            "‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶®‡ßá‡¶á"}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.hospitalId?.name || "‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‡¶®‡ßá‡¶á"}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.doctorId?.category.split(" ").slice(0, 2).join(" ") ||
            "‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶ø‡¶§ ‡¶®‡ßü"}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {item.appointmentDate ? formatBanglaDate(item.appointmentDate) : ""}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap">
          {convertStatusToBangla(item.status)}
        </td>
        <td className="py-3 px-4 font-medium whitespace-nowrap ps-5 text-center">
          {item.status === "confirmed"
            ? convertToBanglaNumber(item.serial || "‡¶®‡¶æ‡¶á")
            : "‚Äî"}
        </td>
      </tr>
    ));
  }, [myAppoinments]);

  return (
    <div className="px-2 lg:px-7 pt-5">
      <SeoHelmet
        title="‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶∏ | Medi Fast Health Care"
        description="Medi Fast Health Care ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶°‡ßç‡¶Ø‡¶æ‡¶∂‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶ï‡¶≤ ‡¶∞‡ßã‡¶ó‡ßÄ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ ‡¶¶‡ßá‡¶ñ‡ßÅ‡¶®, ‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶∏ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶∏‡ßç‡¶•‡¶æ‡¶™‡¶®‡¶æ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶ø‡¶§ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§"
        keywords="‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶® ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü, ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶Æ‡ßá‡¶®‡ßç‡¶ü, Medi Fast Health Care, ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü, ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü"
      />
      <div className="mb-5 flex flex-col md:flex-row md:justify-between gap-3">
        <div className="bg-[#f0f4f8] p-4 rounded-md shadow-md flex-1 flex items-center justify-center">
          <span className="text-lg font-medium">
            ‡¶Æ‡ßã‡¶ü ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü:{" "}
            <span className="text-blue-600">
              {convertToBanglaNumber(totalAppoinments || 0)}
            </span>
          </span>
        </div>
      </div>

      <div className="w-full p-4 bg-[#fff] rounded-md">
        <Search
          setParPage={setParPage}
          setSearchValue={setSearchValue}
          searchValue={searchValue}
        />
        <div className="relative overflow-x-auto pt-5">
          <table className="w-full text-sm text-left text-[#000]">
            <thead className="text-sm text-[#000] uppercase border-b border-slate-700 text-center whitespace-nowrap">
              <tr>
                <th className="py-3 px-4 whitespace-nowrap">
                  ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Ü‡¶á‡¶°‡¶ø
                </th>
                <th className="py-3 px-4 whitespace-nowrap">
                  ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡¶ï‡¶æ‡¶∞‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ
                </th>
                <th className="py-3 px-4 whitespace-nowrap">‡¶´‡ßã‡¶® ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞</th>
                <th className="py-3 px-4 whitespace-nowrap">‡¶∞‡ßã‡¶ó‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ</th>
                <th className="py-3 px-4 whitespace-nowrap">
                  {" "}
                  ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞
                </th>
                <th className="py-3 px-4  whitespace-nowrap">‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ</th>
                <th className="py-3 px-4 whitespace-nowrap">‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ</th>

                <th className="py-3 px-4 whitespace-nowrap">‡¶ï‡ßç‡¶Ø‡¶æ‡¶ü‡¶æ‡¶ó‡¶∞‡¶ø</th>
                <th className="py-3 px-4 whitespace-nowrap">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ì ‡¶∏‡¶Æ‡¶Ø‡¶º</th>
                <th className="py-3 px-4 whitespace-nowrap">‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ</th>
                <th className="py-3 px-4 whitespace-nowrap">‡¶∏‡¶ø‡¶∞‡¶ø‡ßü‡¶æ‡¶≤</th>
              </tr>
            </thead>
            <tbody>
              {myAppoinments.length > 0 ? (
                renderedAppoinments
              ) : (
                <tr>
                  <td colSpan="8" className="p-0">
                    <div className="w-full text-center py-8 text-red-500 font-semibold flex flex-col items-center justify-center gap-2 min-h-[150px]">
                      <span className="text-3xl">üòï</span>
                      <span>‡¶ï‡ßã‡¶®‡ßã ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡¶Ø‡¶º‡ßá‡¶®‡ßç‡¶ü‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§</span>
                    </div>
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>

        {totalAppoinments > parPage && (
          <div className="w-full flex justify-end mt-4">
            <Pagination
              pageNumber={currentPage}
              setPageNumber={setCurrentPage}
              totalItem={totalAppoinments}
              parPage={parPage}
              showItem={3}
            />
          </div>
        )}
      </div>
    </div>
  );
};

export default Appoinments;
